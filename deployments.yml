# redis
---
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: redis-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
  name: redis
spec: 
  clusterIP: None
  ports:
  - name: redis-service
    port: 6379
    targetPort: 6379
  selector: 
    app: redis-ci-cd-example-voting-app-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-ci-cd-example-voting-app-k8s
  template:
    metadata:
      labels:
        app: redis-ci-cd-example-voting-app-k8s
        ref: review-master-8dyme2
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
          name: redis
# db
--- 
apiVersion: v1
kind: Service
metadata: 
  name: db
  labels: 
    app: db-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec: 
  clusterIP: None
  ports: 
  - name: db
    port: 5432
    targetPort: 5432
  selector: 
    app: db-ci-cd-example-voting-app-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-ci-cd-example-voting-app-k8s
  template:
    metadata:
      labels:
        app: db-ci-cd-example-voting-app-k8s
        ref: review-master-8dyme2
    spec:
      containers:
      - name: db
        image: postgres:9.4
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - containerPort: 5432
          name: db
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
# result
---
apiVersion: v1
kind: Service
metadata:
  name: result
  labels:
    app: result-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  type: LoadBalancer
  ports:
  - port: 5001
    targetPort: 80
    name: result
  selector:
    app: result-ci-cd-example-voting-app-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result
  labels:
    app: result-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-ci-cd-example-voting-app-k8s
  template:
    metadata:
      labels:
        app: result-ci-cd-example-voting-app-k8s
        ref: review-master-8dyme2
    spec:
      containers:
      - name: result
        image: registry.gitlab.com/docker-microservice/ci-cd-example-voting-app-k8s/result:master
        ports:
        - containerPort: 80
          name: result
# vote
---
apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    app: vote-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: 80
      name: vote
  selector:
    app: vote-ci-cd-example-voting-app-k8s
---
# vote
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  labels:
    app: vote-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      name: vote
  selector:
    app: vote-ci-cd-example-voting-app-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote
  labels:
    app: vote-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vote-ci-cd-example-voting-app-k8s
  template:
    metadata:
      labels:
        app: vote-ci-cd-example-voting-app-k8s
        ref: review-master-8dyme2
    spec:
      containers:
      - name: vote
        image: registry.gitlab.com/docker-microservice/ci-cd-example-voting-app-k8s/vote:master
        ports:
        - containerPort: 80
          name: vote
# worker
--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
  name: worker
spec: 
  clusterIP: None
  selector: 
    app: worker-ci-cd-example-voting-app-k8s
--- 
apiVersion: apps/v1
kind: Deployment
metadata: 
  labels: 
    app: worker-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
  name: worker
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: worker-ci-cd-example-voting-app-k8s
  template: 
    metadata: 
      labels: 
        app: worker-ci-cd-example-voting-app-k8s
        ref: review-master-8dyme2
    spec: 
      containers: 
      - image: registry.gitlab.com/docker-microservice/ci-cd-example-voting-app-k8s/worker:master
        name: worker
---
# Ingress Resource
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"

  labels:
    app: ingress-ci-cd-example-voting-app-k8s
    ref: review-master-8dyme2
spec:
  tls:
  - hosts:
    - vote.104.154.109.250.nip.io
    - result.104.154.109.250.nip.io
    # the secret used here is an unsigned wildcard cert for demo purposes
    # use your own or comment this out
    secretName: tls-wildcard-demo
  rules:
  - host: result.104.154.109.250.nip.io
    http:
      paths: 
      - path: /
        backend:
          serviceName: result
          servicePort: 5001
  - host: vote.104.154.109.250.nip.io
    http:
      paths: 
      - path: /
        backend:
          serviceName: vote
          servicePort: 5000
      
---